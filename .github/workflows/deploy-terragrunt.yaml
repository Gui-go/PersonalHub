name: "Terragrunt CI/CD"

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, closed]

env:
  TG_VERSION: v0.59.4
  TF_VERSION: 1.13.4
  TG_DIR: ./terragrunt/environments/dev  # root folder with terragrunt.hcl

jobs:  
  terragrunt:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write  # needed to post PR comments

    steps:

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Set up GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.37.1

      - name: Interact with Terragrunt
        run: terragrunt --version

      - name: Terragrunt Init
        # run: terragrunt run-all init --terragrunt-non-interactive
        run: |
          terragrunt init \
            --terragrunt-working-dir terragrunt/environments/dev/network \
            --terragrunt-non-interactive 
        working-directory: ${{ env.WORKING_DIRECTORY }}
        
      - name: Terragrunt Validate # check the configuration files for syntax and internal consistency
        working-directory: ${{ env.TG_DIR }}
        run: terragrunt validate
        #### Workload Identity Pool and Provider ...

      - name: 'Terragrunt Plan'
        # run: terragrunt run-all plan --terragrunt-non-interactive
        run: |
          terragrunt run-all plan \
            --terragrunt-working-dir terragrunt/environments/dev/network \
            --terragrunt-non-interactive
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terragrunt Apply
        if: github.event.pull_request.merged == true
        working-directory: ${{ env.TG_DIR }}
        run: |
          terragrunt apply \
            -auto-approve \
            --terragrunt-working-dir terragrunt/environments/dev/network \
            --terragrunt-non-interactive



        ####

      # - name: Checkout repository
      #   uses: actions/checkout@v4

      # - name: Set up GCP credentials
      #   uses: google-github-actions/auth@v2
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # - name: Install Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: ${{ env.TF_VERSION }}

      # - name: Install Terragrunt
      #   run: |
      #     curl -Lo /tmp/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.TG_VERSION }}/terragrunt_linux_amd64
      #     chmod +x /tmp/terragrunt
      #     sudo mv /tmp/terragrunt /usr/local/bin/terragrunt
      #     terragrunt --version




      #     ###
      # - name: Terragrunt Init (all modules)
      #   working-directory: ${{ env.TG_DIR }}
      #   run: terragrunt run-all init



      # Run Terragrunt Init and Plan
      # Note: The gruntwork-io action can install, and then you use 'run' steps for multi-step execution.
      # - name: Terragrunt Init
      #   run: terragrunt run-all init
      #   working-directory: ./terragrunt/environments/dev

      # - name: Terragrunt Plan
      #   run: terragrunt run-all plan --terragrunt-non-interactive
      #   working-directory: ./terragrunt/environments/dev

      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: ${{ env.TF_VERSION }}

      # - name: Set up Terragrunt
      #   uses: gruntwork-io/terragrunt-action@v3
      #   with:
      #     tg_version: ${{ env.TERRAGRUNT_VERSION }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Authenticate to cloud provider if needed (e.g., GCP)
      # - name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: ${{ env.WIF_PROVIDER }}
      #     service_account: ${{ env.SERVICE_ACCOUNT }}

      # - name: Terragrunt Validate
      #   working-directory: ${{ env.TG_DIR }}
      #   run: terragrunt validate
      #   #### Workload Identity Pool and Provider 

      # - name: Terragrunt Plan
      #   if: github.event.pull_request.merged != true
      #   working-directory: ${{ env.TG_DIR }}
      #   run: terragrunt plan -out=plan.out | tee terragrunt-plan.log

      # - name: Terragrunt Apply
      #   if: github.event.pull_request.merged == true
      #   working-directory: ${{ env.TG_DIR }}
      #   run: terragrunt apply -auto-approve

      # - name: Post PR Comment (Plan Results)
      #   if: github.event_name == 'pull_request' && github.event.pull_request.merged != true
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const fs = require('fs');
      #       const planPath = './infrastructure/terragrunt-plan.log';
      #       let planOutput = 'Terragrunt plan output not found.';
      #       if (fs.existsSync(planPath)) {
      #         planOutput = fs.readFileSync(planPath, 'utf8').substring(0, 60000); // limit output to avoid exceeding comment size
      #       }
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `### Terragrunt Plan Output\n\`\`\`\n${planOutput}\n\`\`\``
      #       })




      # - name: Set up Google Cloud credentials
      #   env:
      #     GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      #   run: |
      #     echo "$GOOGLE_CREDENTIALS" > "${HOME}/gcp-key.json"
      #     export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcp-key.json"

      # Install Terragrunt and Terraform/OpenTofu
      # - name: Install Terraform and Terragrunt
      #   uses: gruntwork-io/terragrunt-action@v3
      #   with:
      #     tg_version: ${{ env.TG_VERSION }}
      #     tofu_version: ${{ env.TF_VERSION }}
