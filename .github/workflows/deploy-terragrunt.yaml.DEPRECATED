name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint-and-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.13.0
          terragrunt_version: ~> 0.45.0

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Run Terragrunt Init (all)
        run: terragrunt run-all init

      - name: Run Terragrunt Validate (all)
        run: terragrunt run-all validate

      - name: Run Terragrunt Plan (all)
        run: terragrunt run-all plan -no-color > tfplan.txt

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan.txt

      # Optional: Add steps for tflint, tfsec here for more robust linting and security checks.
      # - name: Run TFLint
      #   run: terragrunt run-all tflint
      # - name: Run TFSec
      #   run: terragrunt run-all tfsec

  apply:
    runs-on: ubuntu-latest
    needs: lint-and-plan # This job depends on the 'lint-and-plan' job succeeding.
    # This job will only run on 'push' events to the 'main' branch.
    # Consider adding environment protection rules in GitHub for production deployments.
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    # environment: production # Uncomment and configure if using GitHub Environments

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.7.0 # Example: Automate patch updates for 1.7.x
          terragrunt_version: ~> 0.50.0 # Example: Automate patch updates for 0.50.x

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          # IMPORTANT: Ensure you have a GitHub Secret named GCP_SA_KEY
          # containing your GCP Service Account JSON key.
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Download Terraform Plan
        # Downloads the plan artifact generated by the 'lint-and-plan' job.
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Run Terragrunt Apply (all)
        # Applies the Terraform plan. Use -auto-approve with caution in production.
        run: terragrunt run-all apply -auto-approve
